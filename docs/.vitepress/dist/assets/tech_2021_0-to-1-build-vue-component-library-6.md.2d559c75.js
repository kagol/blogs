import{_ as a,B as n,o as l,c as p,G as o,Q as e}from"./chunks/framework.1fee3549.js";const u=JSON.parse('{"title":"从0到1搭建Vue组件库06：手把手带你开发一个脚手架","description":"","frontmatter":{},"headers":[],"relativePath":"tech/2021/0-to-1-build-vue-component-library-6.md","filePath":"tech/2021/0-to-1-build-vue-component-library-6.md"}'),t={name:"tech/2021/0-to-1-build-vue-component-library-6.md"},c=e(`<h1 id="从0到1搭建vue组件库06-手把手带你开发一个脚手架" tabindex="-1">从0到1搭建Vue组件库06：手把手带你开发一个脚手架 <a class="header-anchor" href="#从0到1搭建vue组件库06-手把手带你开发一个脚手架" aria-label="Permalink to &quot;从0到1搭建Vue组件库06：手把手带你开发一个脚手架&quot;">​</a></h1><p><img src="https://user-images.githubusercontent.com/9566362/201511144-b05b690e-7294-4d9f-ad8c-d5c707fc43fd.png" alt="image"></p><p>本文作者：<a href="https://juejin.cn/user/1538972011203662" target="_blank" rel="noreferrer">iel</a></p><p>原文链接：<a href="https://juejin.cn/post/7021870182855344142" target="_blank" rel="noreferrer">https://juejin.cn/post/7021870182855344142</a></p><p>最近在与<a href="https://space.bilibili.com/480140591" target="_blank" rel="noreferrer">村长</a>老师一起做<a href="https://www.bilibili.com/video/BV1Z64y187dR" target="_blank" rel="noreferrer">直播</a>，给大家分享<a href="https://gitee.com/devui/vue-devui" target="_blank" rel="noreferrer">vue devui</a>开源组件库的建设，1-3期以 tree 组件为栗子🌰，介绍了如何设计和开发Vue组件：</p><ol><li><a href="https://juejin.cn/post/7009273646884028430" target="_blank" rel="noreferrer">Vue DevUI开源指南01：提交我的第一次pr</a></li><li><a href="https://juejin.cn/post/7011535488171376671" target="_blank" rel="noreferrer">Vue DevUI开源指南02：实现一个能渲染多层节点的Tree组件</a></li><li><a href="https://juejin.cn/post/7015023354847428645" target="_blank" rel="noreferrer">Vue DevUI开源指南03：如何给 tree 组件增加展开/收起功能</a></li></ol><p>从第4期开始给大家分享组件库工程化相关的内容：</p><ol><li><a href="https://juejin.cn/post/7017101147865350158" target="_blank" rel="noreferrer">【我要做开源】Vue DevUI开源指南04：使用Vite搭建一个支持TypeScript/JSX的Vue3组件库工程 </a></li><li><a href="https://juejin.cn/post/7019314307682795534" target="_blank" rel="noreferrer">【我要做开源】Vue DevUI开源指南05：给Vue3组件库添加VitePress文档系统 </a></li></ol><p>后续的直播也会分成两条线：</p><ol><li>一条是组件的设计和实现</li><li>另一条是组件库的工程化</li></ol><p>欢迎大家持续关注～</p><p>我们 <code>DevUI</code> 团队有多个开源项目，现在都在招募<code>contributor</code>，欢迎大家一起参与开源中来！(感兴趣的小伙伴可以添加<code>DevUI</code>小助手的微信：<code>devui-official</code>，将你拉到我们的核心开发群)</p><ul><li>Ng DevUI: <a href="https://github.com/DevCloudFE/ng-devui" target="_blank" rel="noreferrer">https://github.com/DevCloudFE/ng-devui</a></li><li>Vue DevUI: <a href="https://gitee.com/devui/vue-devui" target="_blank" rel="noreferrer">https://gitee.com/devui/vue-devui</a></li><li>DevUI Admin <a href="https://github.com/DevCloudFE/ng-devui-admin" target="_blank" rel="noreferrer">https://github.com/DevCloudFE/ng-devui-admin</a></li></ul><p><code>DevUI</code>官网：<a href="https://devui.design/" target="_blank" rel="noreferrer">https://devui.design/</a></p><h2 id="上一期内容回顾" tabindex="-1">上一期内容回顾 <a class="header-anchor" href="#上一期内容回顾" aria-label="Permalink to &quot;上一期内容回顾&quot;">​</a></h2><p>上一期主要给大家分享了两部分内容：</p><ul><li>使用vitepress搭建组件库的文档系统</li><li>给文档系统增加demo展开/收起功能</li></ul><p>本期邀请了<code>Vue DevUI</code>团队的<a href="https://juejin.cn/user/1538972011203662" target="_blank" rel="noreferrer">雷同学</a>给大家分享<code>DevUI CLI</code>工具的实现原理。</p><p>雷同学是我们Vue DevUI的早期贡献者，也是Toast组件的田主，早期Vue DevUI组件库还很不完善，组件的文件和组件库的入口文件都是手动添加的，每次新增一个组件，都非常麻烦，需要</p><ol><li>先在<code>devui</code>目录下创建一堆文件<code>index.ts</code>/<code>src/xx.tsx</code>等</li><li>在<code>devui/vue-devui.ts</code>组件库入口文件中添加相应的组件导出</li><li>在<code>sidebar.ts</code>左侧组件菜单中添加相应的组件配置</li></ol><p>而且像<code>vue-devui.ts</code>/<code>sidebar.ts</code>等公共文件，经常多个田主一起修改，经常导致冲突。</p><p>雷同学敏锐得发现了这个问题，并主动提出创建一个<code>DevUI CLI</code>工具来解决这个问题，本期直播雷同学就给大家分享了<code>DevUI CLI</code>的实现原理。</p><p>这只是<code>DevUI CLI</code>工具系列的<a href="https://juejin.cn/post/7021870182855344142" target="_blank" rel="noreferrer">第一期</a>，后续还会继续深入如何使用<code>DevUI CLI</code>：</p><ul><li>为组件库生成入口文件</li><li>创建组件目录结构</li><li>自动生成左侧组件菜单文件</li></ul><p>以下是原文：</p><blockquote><p>脚手架是为了保证各施工过程顺利进行而搭设的工作平台。按搭设的位置分为外脚手架、里脚手架；按材料不同可分为木脚手架、竹脚手架、钢管脚手架；按构造形式分为立杆式脚手架、桥式脚手架、门式脚手架、悬吊式脚手架、挂式脚手架、挑式脚手架、爬式脚手架。 ——百度百科</p></blockquote><p>本质上就是一个便利工具，为一些比较特殊或繁琐的工作提供辅助，我们这里需要开发的是一个基于命令行的工具，后文以 <code>cli</code> 代替。</p><h2 id="为什么需要开发一个脚手架" tabindex="-1">为什么需要开发一个脚手架？ <a class="header-anchor" href="#为什么需要开发一个脚手架" aria-label="Permalink to &quot;为什么需要开发一个脚手架？&quot;">​</a></h2><p>以下为初期组件库协同开发时遇到的问题：</p><ul><li>组件目录结构不一致 <ul><li>扁平化目录</li><li><code>src</code> 型目录</li></ul></li><li>组件产出命名不一致 <ul><li>前缀 <code>D</code> 命名</li><li>无前缀 <code>D</code> 命名</li><li>小写驼峰命名</li><li>大写驼峰命名</li><li><code>xxxService</code> 命名</li><li><code>useXxxService</code> 命名</li></ul></li><li>组件入口文件经常冲突</li></ul><p>为了解决上述问题，本着为开源社区做贡献，发光发热的时候到了，和项目组织人 <code>kagol</code> 沟通了脚手架方案顺利通过，<code>Prefect</code> ！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fde0c795e07146a382691507c2fb646b~tplv-k3u1fbpfcp-watermark.awebp" alt=""></p><h2 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h2><ul><li>[x] 创建统一组件结构</li><li>[x] 创建组件库入口文件</li></ul><h2 id="技术选型" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型" aria-label="Permalink to &quot;技术选型&quot;">​</a></h2><p>脚手架 = 命令 + 交互 + 逻辑处理</p><ul><li>命令 <ul><li><code>commander</code> 插件提供命令注册、参数解析、执行回调</li></ul></li><li>交互 <ul><li><code>inquirer</code> 插件用于命令行的交互（问答）</li></ul></li><li>逻辑处理 <ul><li><code>fs-extra</code> 插件是对 <code>nodejs</code> 文件 <code>Api</code> 的进一步封装，便于使用</li><li><code>kolorist</code> 插件用于输出颜色信息进行友好提示</li></ul></li></ul><h2 id="初始化-cli" tabindex="-1">初始化 cli <a class="header-anchor" href="#初始化-cli" aria-label="Permalink to &quot;初始化 cli&quot;">​</a></h2><h3 id="step1-创建-cli-目录" tabindex="-1">step1 创建 cli 目录 <a class="header-anchor" href="#step1-创建-cli-目录" aria-label="Permalink to &quot;step1 创建 cli 目录&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">devui-cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">创建脚手架目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">devui-cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">进入脚手架目录</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">初始化一个</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">node</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">项目</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">init</span></span></code></pre></div><p>第一步先创建一个目录来存放我们即将开发的脚手架，作为一个 <code>nodejs</code> 包，需要我们通过 <code>npm</code> 或者 <code>yarn</code> 初始化包的信息，一律回车即可通过，生成后的目录结构如下图。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9336fb2a081a43ed8b9a245926e0bc9d~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h3 id="step2-创建入口文件" tabindex="-1">step2 创建入口文件 <a class="header-anchor" href="#step2-创建入口文件" aria-label="Permalink to &quot;step2 创建入口文件&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console.log(&quot;hello devui-cli&quot;)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/index.js</span></span></code></pre></div><h3 id="step3-安装所需依赖" tabindex="-1">step3 安装所需依赖 <a class="header-anchor" href="#step3-安装所需依赖" aria-label="Permalink to &quot;step3 安装所需依赖&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commander</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">inquirer</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">fs-extra</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">kolorist</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">commander</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">inquirer</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">fs-extra</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">kolorist</span></span></code></pre></div><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb0c9c878e1b45209b91690ef5e4488f~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h2 id="开发命令脚本" tabindex="-1">开发命令脚本 <a class="header-anchor" href="#开发命令脚本" aria-label="Permalink to &quot;开发命令脚本&quot;">​</a></h2><p>这里先给大家梳理下 <code>cli</code> 的执行流程：命令行输入 <code>devui-cli</code> --&gt; 命令行交互 --&gt; 根据不同参数进行不同操作。</p><p>这里大家可能要问了，命令行如何识别 <code>devui-cli</code> 的？又是如何执行交互操作的？</p><blockquote><p>这里简单给大家解答一下，命令行里面输入 <code>devui-cli</code> 本质上是执行某一个可执行脚本，那么对应我们 <code>node</code> 包来说就是入口文件 <code>src/index.js</code> 了，所以可以看成是 <code>node src/index.js</code> ，效果是一样的，只不过第一种更为方便与友好一点。那么我们直接执行是否就可以了呢？答案肯定不是的，需要在 <code>package.json</code> 里面配置 <code>bin</code> 属性来标明脚本的一个入口。</p></blockquote><p>准备工作结束，接下来开始正式的 <code>cli</code> 脚本编写。</p><h3 id="配置环境解释器" tabindex="-1">配置环境解释器 <a class="header-anchor" href="#配置环境解释器" aria-label="Permalink to &quot;配置环境解释器&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env node</span></span></code></pre></div><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11c52f6ad08b487d8c8a68ce6e80ca23~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>部分看官可能会疑惑这句话有什么用呢？</p><blockquote><p>答案在这里，若是有使用过 <code>Linux</code> 或者 <code>Unix</code> 的小伙伴们，对于 <code>Shebang</code> 应该不陌生，它是一个符号的名称 <code>#!</code> 。这个符号通常在 <code>Unix</code> 系统的基本中第一行开头中出现，用于指明这个脚本文件的解释程序， <code>#!/usr/bin/env node</code> 目的就是告诉操作系统执行这个脚本的时候，在 <code>/usr/bin</code> 的环配置里找到 <code>node</code> 解释器并执行。</p></blockquote><h3 id="注册命令" tabindex="-1">注册命令 <a class="header-anchor" href="#注册命令" aria-label="Permalink to &quot;注册命令&quot;">​</a></h3><p>配置好环境解释器之后就可以编写我们的命令逻辑了。</p><p>首先，先注册下我们需要执行的一些命令以及一些命令参数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env node</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Command</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commander</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">onCreate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./commands/create</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建命令对象</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> program </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Command</span><span style="color:#BABED8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 注册命令、参数、回调</span></span>
<span class="line"><span style="color:#BABED8;">program</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 注册 create 命令</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">command</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 添加命令描述</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">description</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">创建一个组件模板或配置文件</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 添加命令参数 -t | --type &lt;type&gt; ，&lt;type&gt; 表示该参数必填，[type] 表示选填</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-t --type &lt;type&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">创建类型，可选值：component, lib-entry</span><span style="color:#89DDFF;">\`</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 注册命令回调</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">action</span><span style="color:#BABED8;">(onCreate)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 执行命令行参数解析</span></span>
<span class="line"><span style="color:#BABED8;">program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#BABED8;">()</span></span></code></pre></div><p>创建具体命令目录，方便统一管理。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/commands</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">命令存放目录</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">export function onCreate() { }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/commands/create.js</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">创建</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">create</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">命令文件并导出回调函数</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3cb8c7b0fc1e44feb5fe2ee0a661896b~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3e02f989f1c4f388deb03bb0190649c~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h3 id="测试脚本命令" tabindex="-1">测试脚本命令 <a class="header-anchor" href="#测试脚本命令" aria-label="Permalink to &quot;测试脚本命令&quot;">​</a></h3><p>我们可以先在 <code>onCreate</code> 里面打印一下我们接受到的参数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">onCreate</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">cmd</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">cmd</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>执行一下脚本。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">src/index.js</span></span></code></pre></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fc59305ae79e4e638c2f363aef6c7144~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>报错了！！！我们才刚开始就报错了，是否已经开始崩溃？</p><p>稳住别慌，一切在我们的意料之中。这是因为我们编写的是 <code>node</code> 程序，本应该使用 <code>commonjs</code> 简称 <code>CJS</code> 格式，也就是用 <code>require</code> 和 <code>exports</code> 等语法才能正常使用 <code>node xxx.js</code> 进行启动，但是我们使用了新一代的 <code>esmodule</code> 简称 <code>ESM</code> 格式，所以 <code>node</code> 脸盲了！那么有什么办法呢？</p><p>解决办法一：将 <code>.js</code> 改成 <code>.mjs</code> 。why? 很明显因为 <code>ESM</code> 和 CJS 的加载方式不同，为了更好区分这两种不同的加载方式，所以创建了 <code>.mjs</code> 的文件类型，旨在 <code>Module javascript</code>。<code>.mjs</code> 就是表示当前文件用 <code>ESM</code> 的方式进行加载，如果是普通的 <code>.js</code> 文件，则采用 <code>CJS</code> 的方式加载。</p><p>解决办法二：通过一些模块打包器进行转换为 <code>node</code> 熟悉的 <code>cjs</code> 格式，然后再进行开发。</p><p>这里选择第二种方式，原因是采用打包器我们可以对代码进行其他操作，例如：压缩、转换等。</p><p>模块打包器的话这里采用 <code>esbuild</code> ，理由就是：快捷、方便。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">i</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">esbuild</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">add</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">esbuild</span></span></code></pre></div><p>安装好后先看下命令行帮助文档。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">esbuild</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-h</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">esbuild</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-h</span></span></code></pre></div><p>执行完后会看到以下帮助信息。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e56f4e6744e644719afd5d129abdb17b~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>看过帮助信息后我们加入如下命令：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// --bundle 标识打包的入口文件</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// --format 转换为目标格式代码</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// --platform 目标平台，默认 browser</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// --outdir 输出目录</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 开发时实时编译</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esbuild --bundle ./src/index.js --format=cjs --platform=node --outdir=./lib --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 打包命令</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esbuild --bundle ./src/index.js --format=cjs --platform=node --outdir=./lib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 执行 create 命令，如果有多个命令，可以去掉 create ，使用时再传入</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cli</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node ./lib/index.js create</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4773585bca143498bed754dd4befa9e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>执行下 <code>dev</code> 命令，然后重新开一个 <code>shell</code> 再执行 <code>cli</code> 命令。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7cd9b391b1641689ec6f18f8ebe9335~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62651e3132504cf1a56be0410ad4ecf3~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>输出了一个 <code>{}</code> ，这是我们打印的 <code>cmd</code> 入参，我们并没有填入任何参数，所以解析后是一个空对象，接下来传入 <code>type</code> 参数再看看。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">component</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">是</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--type</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">的别名</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">component</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">是</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">脚本传参时需要加的，类似于参数透传给脚本</span></span></code></pre></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6889f4f665f42c3a2a93d6eb9ad7388~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf584b4258064ceea5056afb8aba2168~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>现在已经能够正常获取到命令参数了，证明命令注册成功，后面可以继续实现我们的交互逻辑。</p><h3 id="完善-create-命令" tabindex="-1">完善 create 命令 <a class="header-anchor" href="#完善-create-命令" aria-label="Permalink to &quot;完善 create 命令&quot;">​</a></h3><p>接下来就是进一步完善我们的命令交互了，以 <code>component</code> 为例，代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> inquirer </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">inquirer</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">red</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">kolorist</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// create type 支持项</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> CREATE_TYPES </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">component</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lib-entry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文档分类</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> DOCS_CATEGORIES </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">通用</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">导航</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">反馈</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">数据录入</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">数据展示</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">布局</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">onCreate</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">cmd</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{})</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">cmd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 如果没有在命令参数里带入 type 那么就询问一次</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#BABED8;">type</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">inquirer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">prompt</span><span style="color:#F07178;">([</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 用于获取后的属性名</span></span>
<span class="line"><span style="color:#F07178;">        name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 交互方式为列表单选</span></span>
<span class="line"><span style="color:#F07178;">        type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 提示信息</span></span>
<span class="line"><span style="color:#F07178;">        message</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">（必填）请选择创建类型：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 选项列表</span></span>
<span class="line"><span style="color:#F07178;">        choices</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">CREATE_TYPES</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 默认值，这里是索引下标</span></span>
<span class="line"><span style="color:#F07178;">        default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    ])</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 赋值 type</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">result</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">type</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 如果获取的类型不在我们支持范围内，那么输出错误提示并重新选择</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">CREATE_TYPES</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">every</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">t</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">t</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">red</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">当前类型仅支持：</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">CREATE_TYPES</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">，收到不在支持范围内的 &quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">type</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&quot;，请重新选择！</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">onCreate</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">type</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">component</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果是组件，我们还需要收集一些信息</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">info</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">inquirer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">prompt</span><span style="color:#F07178;">([</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            message</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">（必填）请输入组件 name ，将用作目录及文件名：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">validate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">组件 name 是必填项！</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            message</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">（必填）请输入组件中文名称，将用作文档列表显示：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">validate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">组件名称是必填项！</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">category</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            message</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">（必填）请选择组件分类，将用作文档列表分类：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            choices</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">DOCS_CATEGORIES</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        ])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">createComponent</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">info</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lib-entry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">createLibEntry</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">e</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">red</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">✖</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exit</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">info</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 输出收集到的组件信息</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">info</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createLibEntry</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">create lib-entry file.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>ok，接下来尝试运行一下我们的脚本。</p><p>先尝试错误的类型：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">error</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">error</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/381660784c474a28b19a98b4a5fe0626~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>按照我们的预想提示了错误信息并让我们重新选择类型。</p><p>接下来尝试正确的类型：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">component</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">or</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">component</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3044548a7c79467eb34e71f385a63be3~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>因为指定了类型为组件，所以现在需要收集一下即将创建的组件信息。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5908508caddb40359d654595c48aef85~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>按照提示信息一步一步完成输入最终获取到了我们需要的数据，接下来就是模板的生成了。</p><h2 id="未完待续" tabindex="-1">未完待续 <a class="header-anchor" href="#未完待续" aria-label="Permalink to &quot;未完待续&quot;">​</a></h2><p>尽情期待后续更精彩的分享！</p>`,110);function r(y,D,F,i,d,B){const s=n("EditInfo");return l(),p("div",null,[c,o(s,{time:"2021年10月22日 23:41",title:"阅读 2012 ·  点赞 22 ·  评论 10 ·  收藏 13"})])}const A=a(t,[["render",r]]);export{u as __pageData,A as default};
